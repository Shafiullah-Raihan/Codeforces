///https://codeforces.com/problemset/problem/1539/C


///   ***   ---   |||         ALLAHU AKBAR        |||   ---   ***   ///



#include<bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<int,int> pii;
typedef pair<double, double> pdd;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;
typedef double dl;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define sz(x) (int)x.size()
#define nl cout<<endl
#define fr(i,a,n) for(ll i=a;i<n;i++)
#define yes             cout<<"YES"<<'\n';
#define no              cout<<"NO"<<'\n';
#define MAX(x)          *max_element(all(x));
#define MIN(x)          *min_element(all(x));
#define SUM(a)          accumulate(all(a),0LL);
#define clz(x)          __builtin_clz(x) /// count leading zeros of 32 bits.
                                         ///like 4=00000000....100(leading 29 ta)
#define ctz(x)          __builtin_ctz(x) ///count trailing zeros                                         
#define popcount(x)     __builtin_popcount(x)    ///count number of ones's(bits)

const double PI = acos(-1);
const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define bismillah ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define file() freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);


ll gcd ( ll a, ll b ) { return __gcd ( a, b ); }
ll lcm ( ll a, ll b ) { return a * ( b / gcd ( a, b ) ); }


int dx[] = { 0, 0, +1, -1, -1,  +1, -1, +1 };
int dy[] = { +1, -1, 0, 0, -1, +1, +1, -1 };


void raihan() {
    ll n, k, x;
    cin >> n >> k >> x;
    vl arr(n);
    for (ll i = 0; i < n; i++) cin >> arr[i];
    sort(all(arr));
    
    if (n == 1) {
        cout << 1 << endl;
        return;
    }

    priority_queue<ll, vl, greater<ll>> pq;
    ll cnt = 1;

    for (ll i = 0; i < n - 1; i++) {
        if ((arr[i + 1] - arr[i]) > x) {
            cnt++;
            pq.push(arr[i + 1] - arr[i]);
        }
    }

    ll left = 0;
    while (!pq.empty()) {
        ll emne = pq.top(); pq.pop();
        ll temp = (emne - 1) / x;
        if (left + temp <= k) {
            cnt--;
            left += temp;
        } else {
            break;
        }
    }

    cout << cnt << endl;
}




int main()
{
    bismillah;
    raihan();

    

    return 0;
}

