///https://codeforces.com/contest/2037/problem/B

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;
typedef double dl;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define sz(x) (int)x.size()
#define nl cout << endl;

#define bismillah ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

ll gcd(ll a, ll b) { return __gcd(a, b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }

int dx[] = { 0, 0, +1, -1, -1, +1, -1, +1 };
int dy[] = { +1, -1, 0, 0, -1, +1, +1, -1 };

int main() {
    bismillah;

    int T;
    cin >> T;
    while (T--) {
        int n;
        cin >> n;
        vector<int> v(n);
        map<int, int> mp;

        for (int i = 0; i < n; i++) {
            cin >> v[i];
            mp[v[i]] = 1; // Track input numbers
        }

        int k = n - 2; // The target number to find divisors
        bool found = false;

        for (int i = 1; i * i <= k; i++) {
            if (k % i == 0) {
                int divisor1 = i;
                int divisor2 = k / i;

                // Check if both divisors are present in the array
                if (mp[divisor1] && mp[divisor2]) {
                    cout << divisor1 << " " << divisor2 << endl;
                    found = true;
                    break;
                }
            }
        }

        if (!found) {
            cout << -1 << endl; // No valid pair found
        }
    }

    return 0;
}
